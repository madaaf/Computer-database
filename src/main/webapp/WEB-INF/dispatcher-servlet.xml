<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
">

	<context:component-scan base-package="com.excilys.aflak.controller" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven/>
	    <!-- Handles HTTP GET requests for /** by efficiently serving
        up static resources in the ${webappRoot}/webapp directory -->
	<mvc:resources mapping="/**" location="/"></mvc:resources>


   <!-- INTERNALISATION -->
	<!-- tell the Spring framework to look for file named messages.properties -->
	<!-- the french string is requested, then messages_fr will be automatically picked  -->
	
	<!-- enable i18n for our application. -->
	<!--  resource bundles are located in the /ressources and follows name pattern as messages_{locale}.properties -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	
	<!-- set a cookie in the client request  -->
	<bean id="localeResolver"
        class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="en" />
        <property name="cookieName" value="myAppLocaleCookie"></property>
        <property name="cookieMaxAge" value="3600"></property>
    </bean>
    <!--  intercept the user request and identify the user locale -->
    <!-- allow to change the user locale and send the response based on the new locale settings of the user. -->
	 <mvc:interceptors>
        <bean
            class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="locale" />
        </bean>
    </mvc:interceptors>


</beans>  

